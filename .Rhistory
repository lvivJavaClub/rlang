TRUE ~ "blue")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(
aes(color = case_when(
Views >= sort(Views, decreasing = TRUE)[3] ~ "green",
#Views <= sort(Views, decreasing = FALSE)[3] ~ "red",
TRUE ~ "blue"
))) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(
aes(color = case_when(
Views >= sort(Views, decreasing = TRUE)[3] ~ "green",
Views <= sort(Views, decreasing = FALSE)[3] ~ "red",
TRUE ~ "blue"
))) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = case_when(
videos$Views >= sort(videos$Views, decreasing = TRUE)[3] ~ "green",
videos$Views <= sort(videos$Views, decreasing = FALSE)[3] ~ "red",
TRUE ~ "blue"
)) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(
videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred")) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred")) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred")) +
theme(legend.position = "none")
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred"))
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred"))
videos <- videos %>% filter(Content != "Total" & Views < 2000 & !is.na(Video.publish.time)) %>%
mutate(published = as.Date(Video.publish.time, format = "%b %d, %Y"))
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred"))
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred"))
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred")) +
labs(
title = "Video Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "darkgreen","darkred")) +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth() +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
, se = FALSE
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
ggplot(videos, aes(x=published, y=Views)) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[3], "green","darkred")) +
geom_smooth(se = FALSE, color = "blue", linetype = "dashed") +
labs(
title = "Views Over Time",
x = "Publishing Time",
y = "Number of Views"
) +
theme_minimal()
rm(v1, v2)
v1 <- c(1, 2, 3, 4)
v2 <- c(2, 3, 4, 5)
df <- data.frame(
Language = c("Java", "Go", "JavaScript", "Rust", "Python"),
Projects = c(150, 50, 130, 20, 200),
Openings = c(100, 200, 50, 40, 90)
)
rm(v1, v2, df)
v1 <- c(1, 2, 3, 4)
v2 <- c(2, 3, 4, 5)
df <- data.frame(
Language = c("Java", "Go", "JavaScript", "Rust", "Python"),
Projects = c(150, 50, 130, 20, 200),
Openings = c(100, 200, 50, 40, 90)
)
ggplot(df, aes(y=Projects, x=Openings, color=Language)) + geom_point(size=5)
typeof(x)
x <- 5
typeof(x)
v1 <- c(1, 2, 3, 4)
typeof(v1)
v1 <- c(1, 2, 3, 4)
typeof(v1)
v2 <- c(2, 3, 4, 5)
typeof(v2)
typeof(df)
typeof(x)
typeof(v1)
rm(x, v1, v2, df)
v3 <- c(1, 2)
v1 <- c(1, 2, 3, 4)
v3 <- c(1, -1)
v1 + v3
rm(x, v1, v2, v3, df)
5 == c(5)
df <- data.frame(
Language = c("Java", "Go", "JavaScript", "Rust", "Python"),
Projects = c(150, 50, 130, 20, 200),
Openings = c(100, 200, 50, 40, 90)
)
df <- rbind(df, c("C#", 0, 0))
View(df)
View(df)
rm(x, v1, v2, v3, df)
events <- read.csv("events.csv")
mx1 <- matrix(c(1, 2, 3, 4, 5), nrow = 3, ncol = 2)
mx1
mx1 + mx1
mx1 * mx1
rm(x, v1, v2, v3, mx, df)
v1 <- c(1, 1, 1, 1)
v2 <- c(1, 2, 3, 4)
v3 <- c(1, -1)
v1 + v2
v1 - v2
v1 + v3
x <- 5
typeof(x)
typeof(x)
typeof(v1)
mx1 <- matrix(c(1, 2, 3, 4, 5), nrow = 3, ncol = 2)
mx1
mx1 * mx1
mx1 + mx1
df <- data.frame(
Language = c("Java", "Go", "JavaScript", "Rust", "Python"),
Projects = c(150, 50, 130, 20, 200),
Openings = c(100, 200, 50, 40, 90)
)
ggplot(df, aes(x = Projects, y = Openings)) + geom_point()
ggplot(df, aes(x = Projects, y = Openings)) + geom_point(aes(color=Language))
ggplot(df, aes(x = Projects, y = Openings)) + geom_point(color="green")
ggplot(df, aes(x = Projects, y = Openings)) + geom_point(aes(color=Language))
ggplot(df, aes(x = Projects, y = Openings)) + geom_point(aes(color=Language), size=5)
rm(x, v1, v2, v3, mx, df)
rm(x, v1, v2, v3, mx1, df)
events <- read.csv("events.csv")
backlog <- read.csv("backlog.csv")
videos <- read.csv("videos.csv")
View(events)
View(events)
View(backlog)
View(backlog)
View(videos)
View(videos)
View(events)
View(events)
tags_count <- events %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'"))
View(tags_count)
View(tags_count)
tags_count <- events %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'")) %>%
separate_rows(tags, sep = ", \\s*")
View(tags_count)
View(tags_count)
tags_count <- events %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'")) %>%
separate_rows(tags, sep = ", \\s*") %>%
count(tags, name = "count")
View(tags_count)
View(tags_count)
tags_count <- events %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'")) %>%
separate_rows(tags, sep = ", \\s*") %>%
count(tags, name = "count") %>%
slice_max(count, n = 10)
View(tags_count)
View(tags_count)
ggplot(tags_count, aes(x=tags, y=count)) +
geom_bar()
ggplot(tags_count, aes(x=tags, y=count)) +
geom_bar(stats="identity")
ggplot(tags_count, aes(x=tags, y=count)) +
geom_bar(stat="identity")
ggplot(tags_count, aes(x=tags, y=count)) +
geom_bar(stat="identity", aes(color=tags))
ggplot(tags_count, aes(x=tags, y=count)) +
geom_bar(stat="identity", aes(fill=tags))
ggplot(tags_count, aes(x=reorder(tags, count), y=count)) +
geom_bar(stat="identity", aes(fill=tags))
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags))
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal()
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none")
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_blank())
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.title.x = element_blank())
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, size = 15))
View(events)
View(events)
View(backlog)
View(backlog)
View(backlog)
View(backlog)
View(events)
View(events)
events_with_speaker <- event %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+"))
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+"))
View(events_with_speaker)
View(events_with_speaker)
len(events_with_speaker)
length(events_with_speaker)
length(events_with_speaker$Number)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number))
length(events_with_speaker$Number)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number))
View(events_with_speaker)
View(events_with_speaker)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number)) %>%
left_join(backlog %>% filter(!(User %in% c("Video", "TBD", "")) & Top != "Тривога") %>% select(Number, User))
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number)) %>%
left_join(backlog %>% filter(!(User %in% c("Video", "TBD", "")) & Top != "Тривога") %>% select(Number, User), by = Number)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number)) %>%
left_join(backlog %>% filter(!(User %in% c("Video", "TBD", "")) & Top != "Тривога") %>% select(Number, User), by = Number)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number)) %>%
left_join(backlog %>% filter(!(User %in% c("Video", "TBD", "")) & Top != "Тривога") %>% select(Number, User), by = "Number")
View(events_with_speaker)
View(events_with_speaker)
events_with_speaker <- events %>%
mutate(Number=str_extract(title, "(?<=Event#)\\d+")) %>%
filter(!is.na(Number)) %>%
mutate(Number = as.numeric(Number)) %>%
left_join(backlog %>% filter(!(User %in% c("Video", "TBD", "")) & Top != "Тривога") %>% select(Number, User), by = "Number") %>%
filter(!is.na(User))
View(events_with_speaker)
View(events_with_speaker)
speaker_summary <- events_with_speaker %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'"))
View(speaker_summary)
View(speaker_summary)
speaker_summary <- events_with_speaker %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'") %>% str_split(", \\s*"))
View(speaker_summary)
View(speaker_summary)
speaker_summary <- events_with_speaker %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'") %>% str_split(", \\s*")) %>%
unnest(tags)
View(speaker_summary)
View(speaker_summary)
View(speaker_summary)
View(speaker_summary)
speaker_summary <- events_with_speaker %>%
mutate(tags = str_remove_all(tags, "\\[|\\]|'") %>% str_split(", \\s*")) %>%
unnest(tags) %>%
group_by(User) %>%
summarise(
num_events = n_distinct(Number),
num_tags = n_distinct(tags)
)
View(speaker_summary)
View(speaker_summary)
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred")
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred", aes(color=User))
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred", aes(color=User))
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, aes(color=User))
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text(aes(label=User))
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User))
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User)) +
labs(
title = "Активність спікерів"
)
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User)) +
labs(
title = "Активність спікерів"б
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User)) +
labs(
title = "Активність спікерів",
x = "Кількість івентів",
y = "Унікальні теми"
)
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User)) +
labs(
title = "Активність спікерів",
x = "Кількість івентів",
y = "Унікальні теми"
) + theme_classic()
View(videos)
View(videos)
View(videos)
View(videos)
videos_summary <- videos %>%
mutate(Video.publish.time = as.Date(Video.publish.time, format = "%b %d, %Y"))
View(videos_summary)
View(videos_summary)
View(videos_summary)
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + geom_point()
View(videos)
View(videos)
videos_summary <- videos %>%
filter(Views < 2000) %>%
mutate(Video.publish.time = as.Date(Video.publish.time, format = "%b %d, %Y"))
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + geom_point()
videos_summary <- videos %>%
mutate(Video.publish.time = as.Date(Video.publish.time, format = "%b %d, %Y"))
videos_summary <- videos %>%
mutate(Video.publish.time = as.Date(Video.publish.time, format = "%b %d, %Y"))
View(videos_summary)
View(videos_summary)
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + geom_point() +
xlim(0, 450)
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + geom_point() +
ylim(0, 450)
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + geom_point() +
ylim(0, 410)
videos$Views
videos["Views"]
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred"))
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
)
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
geom_smooth() +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
geom_smooth(method = "lm") +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
geom_smooth(method = "lm", se = FALSE) +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed") +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
ggplot(videos_summary, aes(x=Video.publish.time, y=Views)) + ylim(0, 410) +
geom_point(color = ifelse(videos$Views >= sort(videos$Views, decreasing = TRUE)[4], "green", "darkred")) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "darkgreen") +
labs(
title="Кількість переглядів відео",
x="Опубліковано",
y="Кількість переглядів"
) + theme_bw()
#install.packages("ggplot2")
#install.packages("tidyverse")
install.packages("ggrepel")
install.packages("ggrepel")
ggsave("video_views.png", width=10, height=8)
ggplot(speaker_summary, aes(x = num_events, y=num_tags)) +
geom_point(size=3, color="darkred") +
geom_text_repel(aes(label=User)) +
labs(
title = "Активність спікерів",
x = "Кількість івентів",
y = "Унікальні теми"
) + theme_classic()
ggsave("speakers.png", width=10, height=8)
ggsave("tags.png", width=10, height=8)
ggplot(tags_count, aes(x=reorder(tags, -count), y=count)) +
geom_bar(stat="identity", aes(fill=tags)) +
theme_minimal() +
theme(legend.position = "none", axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, size = 15))
ggsave("tags.png", width=10, height=8)
